# TODO: detect the appropriate OSG repos and OS for build and installation
# Currently we assume that upstream's version corresponds to what's in
# osg-upcoming-el9-build and osg-upcoming-testing

name: Build XCache images based off of XRootD hotfix tags
on:
  # FIXME: temporarily disable while this workflow is broken
  # schedule:
  #   # Builds take ~15-25 min
  #   - cron: '*/30 * * * *'
  workflow_dispatch:

jobs:
  base-image-build:
    name: Build XCache base image with XRootD hot fixes
    if: github.repository == 'opensciencegrid/docker-xcache'
    runs-on: ubuntu-latest
    outputs:
      hotfix-tag: ${{ steps.hotfix-tags.outputs.tag }}
    steps:
      # TODO: move this step to 'base-image-build' when our RPM
      # building actions are external to this repo
      - name: Check out docker-xcache
        uses: actions/checkout@v2
        with:
          path: docker-xcache
      - name: Check out XRootD
        uses: actions/checkout@v2
        with:
          repository: xrootd/xrootd
          path: xrootd
          fetch-depth: 0
      - name: Find hotfix tags
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        id: hotfix-tags
        run: ../docker-xcache/.github/find-hotfix-tags.sh
        working-directory: ./xrootd
      - name: Prepare hotfix sources
        if: steps.hotfix-tags.outputs.tag != 0
        run: |
            ./docker-xcache/.github/prep-hotfix-sources.sh \
              ${{ steps.hotfix-tags.outputs.tag }} \
              ./xrootd \
              ./xrootd/packaging/rhel/xrootd.spec.in
      - name: Build XRootD hotfix RPMs
        if: steps.hotfix-tags.outputs.tag != 0
        run: |
            docker run \
              -v $(pwd)/xrootd/:/xrootd \
              -v $(pwd)/_build_dir:/u/_build_dir \
              --privileged \
              opensciencegrid/osg-build:el9 \
              osg-build --verbose mock --mock-config-from-koji=osg-3.5-upcoming-el7-build _build_dir
      - name: Move hotfix RPMs
        if: steps.hotfix-tags.outputs.tag != 0
        # FIXME: remove the hardcoded major version from 'xrootd' and 'xrootd-server' RPMs below
        run: |
            sudo mv _build_dir/_build_results/xrootd-5*.rpm \
              _build_dir/_build_results/xrootd-debuginfo-*.rpm \
              _build_dir/_build_results/xrootd-*libs-*.rpm \
              _build_dir/_build_results/xrootd-selinux-*.rpm \
              _build_dir/_build_results/xrootd-server-5*.rpm \
              docker-xcache/xcache/packaging/

      - name: Cache base image
        uses: actions/cache@v2
        with:
          path: /tmp/.base-buildx-cache
          key: base-${{ matrix.repo }}-buildx-${{ github.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        uses: docker/build-push-action@v2.2.2
        with:
          context: .
          target: xcache
          cache-to: type=local,dest=/tmp/.base-buildx-cache,mode=max

  xcache-image-builds:
    name: Build ${{ matrix.image }} image
    strategy:
      matrix:
        image: [atlas-xcache, cms-xcache, stash-cache, stash-origin]
    needs:
      - base-image-build
    # skip if no hotfix tags are found
    if: needs.base-image-build.outputs.hotfix-tag != 0
    runs-on: ubuntu-latest
    steps:
      - name: Check out docker-xcache
        uses: actions/checkout@v2

      - name: Load cached base image
        uses: actions/cache@v2
        with:
          path: /tmp/.base-buildx-cache
          key: base-${{ matrix.repo }}-buildx-${{ github.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v2.2.2
        with:
          context: .
          push: True
          build-args: BASE_YUM_REPO=testing
          tags: opensciencegrid/${{ matrix.image }}:${{ needs.base-image-build.outputs.hotfix-tag }}
          target: ${{ matrix.image }}
          cache-from: type=local,src=/tmp/.base-buildx-cache

